#!/usr/bin/env python3

import os
import subprocess
import sys

compose_template = """
version: '3.8'
services:
  test:
    image: "gcr.io/planetscale-vitess-testing/frameworks/${FRAMEWORK}"
"""

template = """
  - key: test-${SERVICE}-${FRAMEWORK_SLUG}
    label: "Test ${FRAMEWORK} against ${SERVER} ${DIALECT}"
    depends_on: ${DEPENDS_ON}
    plugins:
      - docker-compose#v3.7.0:
          config:
            - .buildkite/docker-compose.${SERVICE}.yml
            - .buildkite/gen/docker-compose.${FRAMEWORK_SLUG}.yml
          run: test
          env:
            FRAMEWORK: "${FRAMEWORK}"
            VT_USERNAME: root
            VT_PASSWORD: root
            VT_DATABASE: testing
            VT_HOST: db
            VT_PORT: 3306
            VT_NUM_SHARDS: ${NUM_SHARDS}
            VT_DIALECT: mysql${DIALECT_SHORT}
"""
def generate_step(server, dialect, num_shards, depends_on, framework):
    service = server.lower() + dialect.replace('.', '') + ('sharded' if num_shards > 1 else '')
    framework_slug = framework.replace('/', '_').replace(':', '_')
    step = template.replace('${SERVER}', server).replace('${DIALECT}', dialect).replace('${DIALECT_SHORT}', dialect.replace('.', '')).replace('${SERVICE}', service).replace('${NUM_SHARDS}', str(num_shards)).replace('${FRAMEWORK}', framework).replace('${FRAMEWORK_SLUG}', framework_slug)
    if(depends_on is None):
        step = '\n'.join([line for line in step.split('\n') if 'depends_on' not in line])
    else:
        step = step.replace('${DEPENDS_ON}', 'test-' + depends_on + '-' + framework_slug)

    return step

def read(path):
    f = open(path, 'r')
    return f.read()

def write(path, string):
    f = open(path, 'w')
    f.write(string)

try:
    os.mkdir(".buildkite/gen")
except FileExistsError:
    pass

agent = subprocess.Popen(['buildkite-agent', 'meta-data', 'get', 'changed-frameworks'], stdout = subprocess.PIPE) # TODO:  changed-frameworks vs frameworks based on env
result = ['  - wait']
for line in agent.stdout:
    line = line.decode('ascii').strip()
    write('.buildkite/gen/docker-compose.' + line.replace('/', '_').replace(':', '_') + '.yml', compose_template.replace('${FRAMEWORK}', line))
    result.append(generate_step('MySQL', '5.7', 1, None, line))
    result.append(generate_step('MySQL', '8.0', 1, None, line))
    result.append(generate_step('vttestserver', '5.7', 1, 'mysql57', line))
    result.append(generate_step('vttestserver', '8.0', 1, 'mysql80', line))
    result.append(generate_step('vttestserver', '5.7', 2, 'vttestserver57', line))
    result.append(generate_step('vttestserver', '8.0', 2, 'vttestserver80', line))
result = '\n'.join(result)

print(result)
agent = subprocess.run(['buildkite-agent', 'pipeline', 'upload'], input = result.encode('ascii'))

