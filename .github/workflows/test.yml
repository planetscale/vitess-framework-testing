name: Integration tests
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  run_tests:
    name: Frameworks
    runs-on: ubuntu-latest

    services:
      mysql57:
        image: mysql:5.7
        ports:
          - 33576:3306
        env:
          MYSQL_DATABASE: test
          MYSQL_ROOT_PASSWORD: root
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        framework:
          - 'go/gorm'
          - 'haskell/mysql-haskell'
          - 'haskell/mysql-simple'
          - 'haskell/persistent-mysql'
          - 'java/jdbc'
          - 'java/spring'
          - 'javascript/sequelize'
          - 'javascript/typeorm'
          - 'mysqldump/export'
          - 'php/laravel'
          - 'python/django'
          - 'python/PyMySQL'
          - 'python/mysqlclient'
          - 'python/sqlalchemy'
          - 'ruby/rails4'
          - 'ruby/rails6'
          - 'rust/diesel'
          - 'rust/mysql'
          - 'rust/mysql_async'
          - 'rust/sqlx'
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - id: files
        uses: jitterbit/get-changed-files@v1

      - id: frameworks
        run: |
          echo -n '::set-output name=changed::'
          for changed_file in ${{ steps.files.outputs.all }}; do
              echo "${changed_file}";
          done | grep '^frameworks/' | cut -d/ -f2-3 | uniq | xargs echo
          echo -n "\n"

      - id: build
        name: Build changed tests and run against upstream MySQL 5.7
        if: contains(steps.frameworks.outputs.changed, matrix.framework)
        run: |
          ./run.sh build_image "${{ matrix.framework }}"
          ./run.sh run_test "${{ matrix.framework }}"
        env:
          VT_USERNAME: root
          VT_PASSWORD: root
          VT_DATABASE: test
          VT_HOST: 127.0.0.1
          VT_PORT: 33576
    
      - id: run
        name: Run unchanged tests against upstream MySQL 5.7
        if: contains(steps.frameworks.outputs.changed, matrix.framework) != true
        run: |
          ./run.sh pull_image "${{ matrix.framework }}"
          ./run.sh run_test "${{ matrix.framework }}"
        env:
          VT_USERNAME: root
          VT_PASSWORD: root
          VT_DATABASE: test
          VT_HOST: 127.0.0.1
          VT_PORT: 33576

      - name: Run changed tests against PSDB
        if: contains(steps.frameworks.outputs.changed, matrix.framework)
        run: |
          # TODO:  Reuse image from previous step instead of building it again
          ./run.sh build_image "${{ matrix.framework }}"
          ./run.sh run_test "${{ matrix.framework }}"
        env:
          VT_USERNAME: actions
          VT_PASSWORD: ${{ secrets.VT_PASSWORD }}
          VT_DATABASE: itest
          VT_HOST: ${{ secrets.VT_HOST }}
          VT_PORT: 3306

      - name: Run unchanged tests against PSDB
        if: contains(steps.frameworks.outputs.changed, matrix.framework) != true
        run: |
          ./run.sh pull_image "${{ matrix.framework }}"
          ./run.sh run_test "${{ matrix.framework }}"
        env:
          VT_USERNAME: actions
          VT_PASSWORD: ${{ secrets.VT_PASSWORD }}
          VT_DATABASE: itest
          VT_HOST: ${{ secrets.VT_HOST }}
          VT_PORT: 3306

      - name: Dump docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v1
        with:
          images: 'mysql:5.7'

      - id: push
        name: Push container images for changed tests
        if: (success() || failure()) && github.ref == 'refs/heads/master' && contains(steps.frameworks.outputs.changed, matrix.framework)
        run: |
          echo '${{ secrets.GCLOUD_SERVICE_KEY }}' | docker login -u _json_key --password-stdin https://gcr.io/
          docker push "$(./run.sh generate_image_name "${{ matrix.framework }}")"

